You are climbing a stair case. It takes n steps to reach to the top.Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?
Note: Given n will be a positive integer.
Input Format
a number from the user
Constraints
no
Output Format
number of ways
Sample Input 0
1
Sample Output 0
1
Sample Input 1
2
Sample Output 1
2
Sample Input 2
3
Sample Output 2
3


import java.io.*;
import java.util.*;
public class Solution
{
    public static void main(String[] args) 
    {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        sc.close();
        int distinctWays = climbStairs(n);
        System.out.println(distinctWays);
    }
    public static int climbStairs(int n) 
    {
        if (n <= 1) 
        {
            return 1;
        }
        int[] dp = new int[n + 1];
        dp[0] = 1;
        dp[1] = 1;
        for (int i = 2; i <= n; i++) 
        {
            dp[i] = dp[i - 1] + dp[i - 2];
        }

        return dp[n];
    }
}
